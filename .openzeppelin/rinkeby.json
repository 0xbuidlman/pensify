{
  "contracts": {
    "FreeDAI": {
      "address": "0x5890682b38Eabc178aB2C375d0Fd77546f68de7E",
      "constructorCode": "608060405261164f806100136000396000f3fe",
      "bodyBytecodeHash": "faecc91226af92d7b506fc25019aa04c853970b7f2a0a3f2f751e762fb9a91ae",
      "localBytecodeHash": "ba203991a3a2de95a831887ef96db5187cc8db6caa8fcd9f27dac3c5b3077ae3",
      "deployedBytecodeHash": "ba203991a3a2de95a831887ef96db5187cc8db6caa8fcd9f27dac3c5b3077ae3",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 8287,
          "type": "t_bool",
          "src": "757:24:40"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 8289,
          "type": "t_bool",
          "src": "876:25:40"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 8345,
          "type": "t_array:50<t_uint256>",
          "src": "1951:29:40"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 7531,
          "type": "t_address",
          "src": "526:22:34"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 7644,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:34"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_name",
          "astId": 8108,
          "type": "t_string",
          "src": "224:20:37"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 8110,
          "type": "t_string",
          "src": "250:22:37"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 8112,
          "type": "t_uint8",
          "src": "278:23:37"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "______gap",
          "astId": 8164,
          "type": "t_array:50<t_uint256>",
          "src": "1654:29:37"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_balances",
          "astId": 7664,
          "type": "t_mapping<t_uint256>",
          "src": "1418:46:35"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_allowances",
          "astId": 7670,
          "type": "t_mapping<t_uint256>",
          "src": "1471:69:35"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_totalSupply",
          "astId": 7672,
          "type": "t_uint256",
          "src": "1547:28:35"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "______gap",
          "astId": 8056,
          "type": "t_array:50<t_uint256>",
          "src": "8173:29:35"
        },
        {
          "contract": "ERC20Burnable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Burnable.sol",
          "label": "______gap",
          "astId": 8097,
          "type": "t_array:50<t_uint256>",
          "src": "761:29:36"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [],
        "storageDiff": []
      }
    },
    "CurveModule": {
      "address": "0x5877218cb740025Cf24211D7BE4F0e81586436Cf",
      "constructorCode": "6080604052611634806100136000396000f3fe",
      "bodyBytecodeHash": "0652ecdad383702ddfb5065497c6c0d8bbd93cd2a6112c36c603668b54e375c2",
      "localBytecodeHash": "18d95b8a5412e34d3f1fb4fa36e4bfeb34aea8808620a52c16823cccbff05038",
      "deployedBytecodeHash": "18d95b8a5412e34d3f1fb4fa36e4bfeb34aea8808620a52c16823cccbff05038",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 9456,
          "type": "t_bool",
          "src": "757:24:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 9458,
          "type": "t_bool",
          "src": "876:25:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 9520,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:46"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 8700,
          "type": "t_address",
          "src": "526:22:40"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 8813,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:40"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "BondingCurve",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\curve\\BondingCurve.sol",
          "label": "curveA",
          "astId": 1218,
          "type": "t_uint256",
          "src": "647:21:14"
        },
        {
          "contract": "BondingCurve",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\curve\\BondingCurve.sol",
          "label": "curveB",
          "astId": 1220,
          "type": "t_uint256",
          "src": "674:21:14"
        },
        {
          "contract": "CurveModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\curve\\CurveModule.sol",
          "label": "withdrawFeePercent",
          "astId": 1485,
          "type": "t_uint256",
          "src": "508:33:15"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [],
        "storageDiff": []
      }
    },
    "PToken": {
      "address": "0xEAf5caf1805B6698E70f063bd7a6f79Bb023E678",
      "constructorCode": "6080604052613162806100136000396000f3fe",
      "bodyBytecodeHash": "23f7c133e80c0c2a826226ce012c0f1b1d5bbf0126416505a117c9a29a1cedcc",
      "localBytecodeHash": "536ddcc621bc41abb8e9705c2935af2f1b1049f5a8b29170353523651d2c9d29",
      "deployedBytecodeHash": "536ddcc621bc41abb8e9705c2935af2f1b1049f5a8b29170353523651d2c9d29",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 7716,
              "type": "t_mapping<t_bool>",
              "src": "150:32:33"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<DistributionToken.Distribution>": {
          "id": "t_struct<DistributionToken.Distribution>",
          "kind": "struct",
          "label": "DistributionToken.Distribution",
          "members": [
            {
              "label": "amount",
              "astId": 5916,
              "type": "t_uint256",
              "src": "745:14:27"
            },
            {
              "label": "totalSupply",
              "astId": 5918,
              "type": "t_uint256",
              "src": "832:19:27"
            }
          ]
        },
        "t_array:dyn<t_struct<DistributionToken.Distribution>>": {
          "id": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "valueType": "t_struct<DistributionToken.Distribution>",
          "length": "dyn",
          "kind": "array",
          "label": "DistributionToken.Distribution[]"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 9352,
          "type": "t_bool",
          "src": "757:24:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 9354,
          "type": "t_bool",
          "src": "876:25:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 9416,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:46"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 8596,
          "type": "t_address",
          "src": "526:22:40"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 8709,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:40"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_balances",
          "astId": 8729,
          "type": "t_mapping<t_uint256>",
          "src": "1418:46:41"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_allowances",
          "astId": 8735,
          "type": "t_mapping<t_uint256>",
          "src": "1471:69:41"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_totalSupply",
          "astId": 8737,
          "type": "t_uint256",
          "src": "1547:28:41"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "______gap",
          "astId": 9121,
          "type": "t_array:50<t_uint256>",
          "src": "8173:29:41"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_name",
          "astId": 9173,
          "type": "t_string",
          "src": "224:20:43"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 9175,
          "type": "t_string",
          "src": "250:22:43"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 9177,
          "type": "t_uint8",
          "src": "278:23:43"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "______gap",
          "astId": 9229,
          "type": "t_array:50<t_uint256>",
          "src": "1654:29:43"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "_minters",
          "astId": 7813,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:34"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "______gap",
          "astId": 7913,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:34"
        },
        {
          "contract": "ERC20Mintable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Mintable.sol",
          "label": "______gap",
          "astId": 9278,
          "type": "t_array:50<t_uint256>",
          "src": "831:29:44"
        },
        {
          "contract": "ERC20Burnable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Burnable.sol",
          "label": "______gap",
          "astId": 9162,
          "type": "t_array:50<t_uint256>",
          "src": "761:29:42"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
          "label": "distributions",
          "astId": 5922,
          "type": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "src": "903:35:27"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
          "label": "nextDistributions",
          "astId": 5926,
          "type": "t_mapping<t_uint256>",
          "src": "992:52:27"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
          "label": "nextDistributionTimestmap",
          "astId": 5928,
          "type": "t_uint256",
          "src": "1107:40:27"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
          "label": "distributionAccumulator",
          "astId": 5930,
          "type": "t_uint256",
          "src": "1242:38:27"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "MinterRole",
            "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
            "label": "_minters",
            "astId": 7813,
            "type": "t_struct<Roles.Role>",
            "src": "327:27:34"
          },
          {
            "contract": "DistributionToken",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
            "label": "distributions",
            "astId": 5922,
            "type": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
            "src": "903:35:27"
          }
        ],
        "storageDiff": [
          {
            "action": "append",
            "updated": {
              "index": 20,
              "contract": "DistributionToken",
              "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
              "label": "nextDistributionTimestmap",
              "astId": 5928,
              "type": "t_uint256",
              "src": "1107:40:27"
            }
          },
          {
            "action": "append",
            "updated": {
              "index": 21,
              "contract": "DistributionToken",
              "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
              "label": "distributionAccumulator",
              "astId": 5930,
              "type": "t_uint256",
              "src": "1242:38:27"
            }
          }
        ]
      }
    },
    "LiquidityModule": {
      "address": "0x3bD637DE31BCd77495e103348568aDcF94885EA1",
      "constructorCode": "6080604052611abc806100136000396000f3fe",
      "bodyBytecodeHash": "c4928c532c20d13499af05f633ba12c85a0733cd09062cfbf3e508086aa96e9c",
      "localBytecodeHash": "809dfae24bbd30a2c27c63db9d1a90206bb00daaeca66d5fe775020561058147",
      "deployedBytecodeHash": "809dfae24bbd30a2c27c63db9d1a90206bb00daaeca66d5fe775020561058147",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<LiquidityModule.LiquidityLimits>": {
          "id": "t_struct<LiquidityModule.LiquidityLimits>",
          "kind": "struct",
          "label": "LiquidityModule.LiquidityLimits",
          "members": [
            {
              "label": "lDepositMin",
              "astId": 2438,
              "type": "t_uint256",
              "src": "483:19:19"
            },
            {
              "label": "pWithdrawMin",
              "astId": 2440,
              "type": "t_uint256",
              "src": "563:20:19"
            }
          ]
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 9363,
          "type": "t_bool",
          "src": "757:24:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 9365,
          "type": "t_bool",
          "src": "876:25:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 9427,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:46"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 8607,
          "type": "t_address",
          "src": "526:22:40"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 8720,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:40"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "LiquidityModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\liquidity\\LiquidityModule.sol",
          "label": "limits",
          "astId": 2443,
          "type": "t_struct<LiquidityModule.LiquidityLimits>",
          "src": "641:29:19"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "LiquidityModule",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\liquidity\\LiquidityModule.sol",
            "label": "limits",
            "astId": 2443,
            "type": "t_struct<LiquidityModule.LiquidityLimits>",
            "src": "641:29:19"
          }
        ],
        "storageDiff": []
      }
    },
    "Pool": {
      "address": "0x04c57295EAFF1f3213145eB33F004128E36DDc65",
      "constructorCode": "6080604052611c63806100136000396000f3fe",
      "bodyBytecodeHash": "a5e48c5fbac7a3e6e613d5ba3954a953dc8bc3eed8462d90205341fd61e06fee",
      "localBytecodeHash": "681902a77118befb99f3fbe4bf9617cc5829851af5e2a54b5ff45cde0e6db53f",
      "deployedBytecodeHash": "681902a77118befb99f3fbe4bf9617cc5829851af5e2a54b5ff45cde0e6db53f",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_struct<AddressMap.Data>": {
          "id": "t_struct<AddressMap.Data>",
          "kind": "struct",
          "label": "AddressMap.Data",
          "members": [
            {
              "label": "valueOf",
              "astId": 6796,
              "type": "t_mapping<t_address>",
              "src": "278:35:28"
            },
            {
              "label": "keyOf",
              "astId": 6800,
              "type": "t_mapping<t_string>",
              "src": "323:33:28"
            },
            {
              "label": "items",
              "astId": 6802,
              "type": "t_struct<AddressList.Data>",
              "src": "366:33:28"
            }
          ]
        },
        "t_mapping<t_address>": {
          "id": "t_mapping<t_address>",
          "valueType": "t_address",
          "label": "mapping(key => address)",
          "kind": "mapping"
        },
        "t_mapping<t_string>": {
          "id": "t_mapping<t_string>",
          "valueType": "t_string",
          "label": "mapping(key => string)",
          "kind": "mapping"
        },
        "t_struct<AddressList.Data>": {
          "id": "t_struct<AddressList.Data>",
          "kind": "struct",
          "label": "AddressList.Data",
          "members": [
            {
              "label": "head",
              "astId": 6211,
              "type": "t_address",
              "src": "178:12:27"
            },
            {
              "label": "tail",
              "astId": 6213,
              "type": "t_address",
              "src": "200:12:27"
            },
            {
              "label": "length",
              "astId": 6215,
              "type": "t_uint256",
              "src": "222:14:27"
            },
            {
              "label": "isContain",
              "astId": 6219,
              "type": "t_mapping<t_bool>",
              "src": "246:37:27"
            },
            {
              "label": "nextOf",
              "astId": 6223,
              "type": "t_mapping<t_address>",
              "src": "293:34:27"
            },
            {
              "label": "prevOf",
              "astId": 6227,
              "type": "t_mapping<t_address>",
              "src": "337:34:27"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 8287,
          "type": "t_bool",
          "src": "757:24:40"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 8289,
          "type": "t_bool",
          "src": "876:25:40"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 8345,
          "type": "t_array:50<t_uint256>",
          "src": "1951:29:40"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 7531,
          "type": "t_address",
          "src": "526:22:34"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 7644,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:34"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "name",
          "astId": 166,
          "type": "t_string",
          "src": "209:19:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "description",
          "astId": 168,
          "type": "t_string",
          "src": "234:26:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "founder",
          "astId": 170,
          "type": "t_address",
          "src": "266:22:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "modules",
          "astId": 172,
          "type": "t_struct<AddressMap.Data>",
          "src": "317:23:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "is_constant",
          "astId": 182,
          "type": "t_mapping<t_bool>",
          "src": "468:43:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "abiOf",
          "astId": 186,
          "type": "t_mapping<t_string>",
          "src": "622:39:3"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "LoanModule": {
      "address": "0x77Fa8436a461e12a5D06ef3B4337486354480333",
      "constructorCode": "6080604052614e05806100136000396000f3fe",
      "bodyBytecodeHash": "49da562d38e4618cb7aca3e34e84d76725b4476146877ed7fba66309966f8119",
      "localBytecodeHash": "efcce1d444802915e705bfdf5a7462d6dbdf8c2cd313dbc9caf0cd7e134cc2e8",
      "deployedBytecodeHash": "efcce1d444802915e705bfdf5a7462d6dbdf8c2cd313dbc9caf0cd7e134cc2e8",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<LoanModule.DebtProposal>": {
          "id": "t_struct<LoanModule.DebtProposal>",
          "kind": "struct",
          "label": "LoanModule.DebtProposal",
          "members": [
            {
              "label": "lAmount",
              "astId": 2917,
              "type": "t_uint256",
              "src": "1764:15:20"
            },
            {
              "label": "interest",
              "astId": 2919,
              "type": "t_uint256",
              "src": "1847:16:20"
            },
            {
              "label": "descriptionHash",
              "astId": 2921,
              "type": "t_bytes32",
              "src": "1941:23:20"
            },
            {
              "label": "pledges",
              "astId": 2925,
              "type": "t_mapping<t_struct<LoanModule.DebtPledge>>",
              "src": "2042:38:20"
            },
            {
              "label": "supporters",
              "astId": 2928,
              "type": "t_array:dyn<t_address>",
              "src": "2164:20:20"
            },
            {
              "label": "lCovered",
              "astId": 2930,
              "type": "t_uint256",
              "src": "2281:16:20"
            },
            {
              "label": "pCollected",
              "astId": 2932,
              "type": "t_uint256",
              "src": "2363:18:20"
            },
            {
              "label": "executed",
              "astId": 2934,
              "type": "t_bool",
              "src": "2448:13:20"
            }
          ]
        },
        "t_bytes32": {
          "id": "t_bytes32",
          "kind": "elementary",
          "label": "bytes32"
        },
        "t_struct<LoanModule.DebtPledge>": {
          "id": "t_struct<LoanModule.DebtPledge>",
          "kind": "struct",
          "label": "LoanModule.DebtPledge",
          "members": [
            {
              "label": "senderIndex",
              "astId": 2910,
              "type": "t_uint256",
              "src": "1510:19:20"
            },
            {
              "label": "lAmount",
              "astId": 2912,
              "type": "t_uint256",
              "src": "1578:15:20"
            },
            {
              "label": "pAmount",
              "astId": 2914,
              "type": "t_uint256",
              "src": "1658:15:20"
            }
          ]
        },
        "t_mapping<t_struct<LoanModule.DebtPledge>>": {
          "id": "t_mapping<t_struct<LoanModule.DebtPledge>>",
          "valueType": "t_struct<LoanModule.DebtPledge>",
          "label": "mapping(key => LoanModule.DebtPledge)",
          "kind": "mapping"
        },
        "t_array:dyn<t_address>": {
          "id": "t_array:dyn<t_address>",
          "valueType": "t_address",
          "length": "dyn",
          "kind": "array",
          "label": "address[]"
        },
        "t_array:dyn<t_struct<LoanModule.DebtProposal>>": {
          "id": "t_array:dyn<t_struct<LoanModule.DebtProposal>>",
          "valueType": "t_struct<LoanModule.DebtProposal>",
          "length": "dyn",
          "kind": "array",
          "label": "LoanModule.DebtProposal[]"
        },
        "t_mapping<t_array:dyn<t_struct<LoanModule.DebtProposal>>>": {
          "id": "t_mapping<t_array:dyn<t_struct<LoanModule.DebtProposal>>>",
          "valueType": "t_array:dyn<t_struct<LoanModule.DebtProposal>>",
          "label": "mapping(key => LoanModule.DebtProposal[])",
          "kind": "mapping"
        },
        "t_struct<LoanModule.Debt>": {
          "id": "t_struct<LoanModule.Debt>",
          "kind": "struct",
          "label": "LoanModule.Debt",
          "members": [
            {
              "label": "proposal",
              "astId": 2937,
              "type": "t_uint256",
              "src": "2548:16:20"
            },
            {
              "label": "lAmount",
              "astId": 2939,
              "type": "t_uint256",
              "src": "2635:15:20"
            },
            {
              "label": "lastPayment",
              "astId": 2941,
              "type": "t_uint256",
              "src": "2742:19:20"
            },
            {
              "label": "pInterest",
              "astId": 2943,
              "type": "t_uint256",
              "src": "2899:17:20"
            },
            {
              "label": "claimedPledges",
              "astId": 2947,
              "type": "t_mapping<t_uint256>",
              "src": "2989:42:20"
            },
            {
              "label": "defaultExecuted",
              "astId": 2949,
              "type": "t_bool",
              "src": "3091:20:20"
            }
          ]
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_array:dyn<t_struct<LoanModule.Debt>>": {
          "id": "t_array:dyn<t_struct<LoanModule.Debt>>",
          "valueType": "t_struct<LoanModule.Debt>",
          "length": "dyn",
          "kind": "array",
          "label": "LoanModule.Debt[]"
        },
        "t_mapping<t_array:dyn<t_struct<LoanModule.Debt>>>": {
          "id": "t_mapping<t_array:dyn<t_struct<LoanModule.Debt>>>",
          "valueType": "t_array:dyn<t_struct<LoanModule.Debt>>",
          "label": "mapping(key => LoanModule.Debt[])",
          "kind": "mapping"
        },
        "t_struct<LoanModule.LoanLimits>": {
          "id": "t_struct<LoanModule.LoanLimits>",
          "kind": "struct",
          "label": "LoanModule.LoanLimits",
          "members": [
            {
              "label": "lDebtAmountMin",
              "astId": 2952,
              "type": "t_uint256",
              "src": "3221:22:20"
            },
            {
              "label": "debtInterestMin",
              "astId": 2954,
              "type": "t_uint256",
              "src": "3317:23:20"
            },
            {
              "label": "pledgePercentMin",
              "astId": 2956,
              "type": "t_uint256",
              "src": "3387:24:20"
            },
            {
              "label": "lMinPledgeMax",
              "astId": 2958,
              "type": "t_uint256",
              "src": "3544:21:20"
            },
            {
              "label": "debtLoadMax",
              "astId": 2960,
              "type": "t_uint256",
              "src": "3672:19:20"
            }
          ]
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 9462,
          "type": "t_bool",
          "src": "757:24:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 9464,
          "type": "t_bool",
          "src": "876:25:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 9526,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:46"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 8706,
          "type": "t_address",
          "src": "526:22:40"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 8819,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:40"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "LoanModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
          "label": "debtProposals",
          "astId": 2966,
          "type": "t_mapping<t_array:dyn<t_struct<LoanModule.DebtProposal>>>",
          "src": "3836:53:20"
        },
        {
          "contract": "LoanModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
          "label": "debts",
          "astId": 2971,
          "type": "t_mapping<t_array:dyn<t_struct<LoanModule.Debt>>>",
          "src": "3895:37:20"
        },
        {
          "contract": "LoanModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
          "label": "lDebts",
          "astId": 2973,
          "type": "t_uint256",
          "src": "3939:22:20"
        },
        {
          "contract": "LoanModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
          "label": "lProposals",
          "astId": 2975,
          "type": "t_uint256",
          "src": "3967:26:20"
        },
        {
          "contract": "LoanModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
          "label": "limits",
          "astId": 2977,
          "type": "t_struct<LoanModule.LoanLimits>",
          "src": "3999:24:20"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "LoanModule",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
            "label": "debtProposals",
            "astId": 2966,
            "type": "t_mapping<t_array:dyn<t_struct<LoanModule.DebtProposal>>>",
            "src": "3836:53:20"
          },
          {
            "contract": "LoanModule",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
            "label": "debts",
            "astId": 2971,
            "type": "t_mapping<t_array:dyn<t_struct<LoanModule.Debt>>>",
            "src": "3895:37:20"
          },
          {
            "contract": "LoanModule",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
            "label": "limits",
            "astId": 2977,
            "type": "t_struct<LoanModule.LoanLimits>",
            "src": "3999:24:20"
          }
        ],
        "storageDiff": []
      }
    },
    "FundsModule": {
      "address": "0x78aE70C25262bAb65785F8C158f3ec8Ed0bF5490",
      "constructorCode": "6080604052612df1806100136000396000f3fe",
      "bodyBytecodeHash": "3722ad5ff370c13dd8d8e53d73db3700890eab4980775351294a96863f85640c",
      "localBytecodeHash": "7e4f7876174b7995ff02ce1d06acf45b41c48da443c094341e7a1da0094fd66b",
      "deployedBytecodeHash": "7e4f7876174b7995ff02ce1d06acf45b41c48da443c094341e7a1da0094fd66b",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 7820,
              "type": "t_mapping<t_bool>",
              "src": "150:32:33"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 9456,
          "type": "t_bool",
          "src": "757:24:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 9458,
          "type": "t_bool",
          "src": "876:25:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 9520,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:46"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 8700,
          "type": "t_address",
          "src": "526:22:40"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 8813,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:40"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "FundsOperatorRole",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\funds\\FundsOperatorRole.sol",
          "label": "_operators",
          "astId": 2395,
          "type": "t_struct<Roles.Role>",
          "src": "448:29:18"
        },
        {
          "contract": "FundsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\funds\\FundsModule.sol",
          "label": "lBalance",
          "astId": 1658,
          "type": "t_uint256",
          "src": "712:23:17"
        },
        {
          "contract": "FundsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\funds\\FundsModule.sol",
          "label": "pBalances",
          "astId": 1662,
          "type": "t_mapping<t_uint256>",
          "src": "835:35:17"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "FundsOperatorRole",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\funds\\FundsOperatorRole.sol",
            "label": "_operators",
            "astId": 2395,
            "type": "t_struct<Roles.Role>",
            "src": "448:29:18"
          }
        ],
        "storageDiff": []
      }
    },
    "AccessModule": {
      "address": "0x75322C63f54623325b64A2A9A581e5ec45FBb517",
      "constructorCode": "6080604052611a7c806100136000396000f3fe",
      "bodyBytecodeHash": "d0a7b648222deaf6c42cbc6af1c5f3508ea3d8917c11dc7347247b60d958ccb4",
      "localBytecodeHash": "46c16bdc6a5ffb32d98227b1e974e0ede822256659b1e270d042917c6f7d6b4d",
      "deployedBytecodeHash": "46c16bdc6a5ffb32d98227b1e974e0ede822256659b1e270d042917c6f7d6b4d",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 7263,
              "type": "t_mapping<t_bool>",
              "src": "150:32:33"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 8899,
          "type": "t_bool",
          "src": "757:24:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 8901,
          "type": "t_bool",
          "src": "876:25:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 8963,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:46"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 8143,
          "type": "t_address",
          "src": "526:22:40"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 8256,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:40"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "PauserRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\PauserRole.sol",
          "label": "_pausers",
          "astId": 7483,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:35"
        },
        {
          "contract": "PauserRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\PauserRole.sol",
          "label": "______gap",
          "astId": 7583,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:35"
        },
        {
          "contract": "Pausable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\lifecycle\\Pausable.sol",
          "label": "_paused",
          "astId": 7862,
          "type": "t_bool",
          "src": "909:20:38"
        },
        {
          "contract": "Pausable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\lifecycle\\Pausable.sol",
          "label": "______gap",
          "astId": 7945,
          "type": "t_array:50<t_uint256>",
          "src": "2163:29:38"
        },
        {
          "contract": "WhitelistAdminRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistAdminRole.sol",
          "label": "_whitelistAdmins",
          "astId": 7606,
          "type": "t_struct<Roles.Role>",
          "src": "477:35:36"
        },
        {
          "contract": "WhitelistAdminRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistAdminRole.sol",
          "label": "______gap",
          "astId": 7706,
          "type": "t_array:50<t_uint256>",
          "src": "1503:29:36"
        },
        {
          "contract": "WhitelistedRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistedRole.sol",
          "label": "_whitelisteds",
          "astId": 7732,
          "type": "t_struct<Roles.Role>",
          "src": "709:32:37"
        },
        {
          "contract": "WhitelistedRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistedRole.sol",
          "label": "______gap",
          "astId": 7840,
          "type": "t_array:50<t_uint256>",
          "src": "1760:29:37"
        },
        {
          "contract": "AccessModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\access\\AccessModule.sol",
          "label": "whitelistEnabled",
          "astId": 1062,
          "type": "t_bool",
          "src": "433:28:12"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    }
  },
  "solidityLibs": {},
  "proxies": {
    "akropolis-pool/FreeDAI": [
      {
        "address": "0x3F5B698332572Fb6188492F5D53ba75f81797F9d",
        "version": "1.0.0",
        "implementation": "0x5890682b38Eabc178aB2C375d0Fd77546f68de7E",
        "admin": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/Pool": [
      {
        "address": "0x17d7aFC6604C3933913960110Cfa5c436eb0dB45",
        "version": "1.0.0",
        "implementation": "0x04c57295EAFF1f3213145eB33F004128E36DDc65",
        "admin": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/PToken": [
      {
        "address": "0x2dC45475c35AB01eC7eEA16a843246e8c67D6C82",
        "version": "1.0.0",
        "implementation": "0xEAf5caf1805B6698E70f063bd7a6f79Bb023E678",
        "admin": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/CurveModule": [
      {
        "address": "0xD5F67aa0af6be5c10389A8AC5d2392ee60e8D1Cb",
        "version": "1.0.0",
        "implementation": "0x5877218cb740025Cf24211D7BE4F0e81586436Cf",
        "admin": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/LiquidityModule": [
      {
        "address": "0xfC95422e89e1892D939B103e73e80d60030b02A5",
        "version": "1.0.0",
        "implementation": "0x3bD637DE31BCd77495e103348568aDcF94885EA1",
        "admin": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/LoanModule": [
      {
        "address": "0xCA7c5AcF5686d4fdF1a439FE356d66638371Db64",
        "version": "1.0.0",
        "implementation": "0x77Fa8436a461e12a5D06ef3B4337486354480333",
        "admin": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/FundsModule": [
      {
        "address": "0x3b1E2e62A4332BAb55A3e935EeaC95aF71002E7B",
        "version": "1.0.0",
        "implementation": "0x78aE70C25262bAb65785F8C158f3ec8Ed0bF5490",
        "admin": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/AccessModule": [
      {
        "address": "0x3346a57563Ce5d04Ab45efcA62DDe6544D056064",
        "version": "1.0.0",
        "implementation": "0x75322C63f54623325b64A2A9A581e5ec45FBb517",
        "admin": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8",
        "kind": "Upgradeable"
      }
    ]
  },
  "manifestVersion": "2.2",
  "version": "1.0.0",
  "proxyAdmin": {
    "address": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8"
  }
}
