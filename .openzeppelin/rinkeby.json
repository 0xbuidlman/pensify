{
  "contracts": {
    "FreeDAI": {
      "address": "0x5890682b38Eabc178aB2C375d0Fd77546f68de7E",
      "constructorCode": "608060405261164f806100136000396000f3fe",
      "bodyBytecodeHash": "faecc91226af92d7b506fc25019aa04c853970b7f2a0a3f2f751e762fb9a91ae",
      "localBytecodeHash": "ba203991a3a2de95a831887ef96db5187cc8db6caa8fcd9f27dac3c5b3077ae3",
      "deployedBytecodeHash": "ba203991a3a2de95a831887ef96db5187cc8db6caa8fcd9f27dac3c5b3077ae3",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 8287,
          "type": "t_bool",
          "src": "757:24:40"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 8289,
          "type": "t_bool",
          "src": "876:25:40"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 8345,
          "type": "t_array:50<t_uint256>",
          "src": "1951:29:40"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 7531,
          "type": "t_address",
          "src": "526:22:34"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 7644,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:34"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_name",
          "astId": 8108,
          "type": "t_string",
          "src": "224:20:37"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 8110,
          "type": "t_string",
          "src": "250:22:37"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 8112,
          "type": "t_uint8",
          "src": "278:23:37"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "______gap",
          "astId": 8164,
          "type": "t_array:50<t_uint256>",
          "src": "1654:29:37"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_balances",
          "astId": 7664,
          "type": "t_mapping<t_uint256>",
          "src": "1418:46:35"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_allowances",
          "astId": 7670,
          "type": "t_mapping<t_uint256>",
          "src": "1471:69:35"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_totalSupply",
          "astId": 7672,
          "type": "t_uint256",
          "src": "1547:28:35"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "______gap",
          "astId": 8056,
          "type": "t_array:50<t_uint256>",
          "src": "8173:29:35"
        },
        {
          "contract": "ERC20Burnable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Burnable.sol",
          "label": "______gap",
          "astId": 8097,
          "type": "t_array:50<t_uint256>",
          "src": "761:29:36"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [],
        "storageDiff": []
      }
    },
    "CurveModule": {
      "address": "0x8627524C562b2620086DfD9b0C9D11B1af9Ae7A5",
      "constructorCode": "60806040526116a6806100136000396000f3fe",
      "bodyBytecodeHash": "b68b7f1e4b6fd895d9f2406f8d83ef2d3a6611d4d7cfb7acf49519f86755b72a",
      "localBytecodeHash": "1bd20f31afe21542ed3387ac61d98a21dbce16b848f03a2054ce0f4debea5a46",
      "deployedBytecodeHash": "1bd20f31afe21542ed3387ac61d98a21dbce16b848f03a2054ce0f4debea5a46",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 10486,
          "type": "t_bool",
          "src": "757:24:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 10488,
          "type": "t_bool",
          "src": "876:25:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 10550,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:46"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 9730,
          "type": "t_address",
          "src": "526:22:40"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 9843,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:40"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "BondingCurve",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\curve\\BondingCurve.sol",
          "label": "curveA",
          "astId": 1264,
          "type": "t_uint256",
          "src": "647:21:14"
        },
        {
          "contract": "BondingCurve",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\curve\\BondingCurve.sol",
          "label": "curveB",
          "astId": 1266,
          "type": "t_uint256",
          "src": "674:21:14"
        },
        {
          "contract": "CurveModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\curve\\CurveModule.sol",
          "label": "withdrawFeePercent",
          "astId": 1531,
          "type": "t_uint256",
          "src": "508:33:15"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [],
        "storageDiff": []
      }
    },
    "PToken": {
      "address": "0x65ac9039469099D71Cf11f075bFc0BaE5A5BeB51",
      "constructorCode": "6080604052613182806100136000396000f3fe",
      "bodyBytecodeHash": "2370878747bd0c0870e7b0774c5a2a7953c78fc8e22726a77fdba4ce4e2df8b9",
      "localBytecodeHash": "703d85bba025c2012fe6c2a77311dfedd474720b25a9025a06af67107bed8613",
      "deployedBytecodeHash": "703d85bba025c2012fe6c2a77311dfedd474720b25a9025a06af67107bed8613",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 7857,
              "type": "t_mapping<t_bool>",
              "src": "150:32:33"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_struct<DistributionToken.Distribution>": {
          "id": "t_struct<DistributionToken.Distribution>",
          "kind": "struct",
          "label": "DistributionToken.Distribution",
          "members": [
            {
              "label": "amount",
              "astId": 6034,
              "type": "t_uint256",
              "src": "745:14:27"
            },
            {
              "label": "totalSupply",
              "astId": 6036,
              "type": "t_uint256",
              "src": "832:19:27"
            }
          ]
        },
        "t_array:dyn<t_struct<DistributionToken.Distribution>>": {
          "id": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "valueType": "t_struct<DistributionToken.Distribution>",
          "length": "dyn",
          "kind": "array",
          "label": "DistributionToken.Distribution[]"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 9493,
          "type": "t_bool",
          "src": "757:24:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 9495,
          "type": "t_bool",
          "src": "876:25:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 9557,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:46"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 8737,
          "type": "t_address",
          "src": "526:22:40"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 8850,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:40"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_balances",
          "astId": 8870,
          "type": "t_mapping<t_uint256>",
          "src": "1418:46:41"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_allowances",
          "astId": 8876,
          "type": "t_mapping<t_uint256>",
          "src": "1471:69:41"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "_totalSupply",
          "astId": 8878,
          "type": "t_uint256",
          "src": "1547:28:41"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20.sol",
          "label": "______gap",
          "astId": 9262,
          "type": "t_array:50<t_uint256>",
          "src": "8173:29:41"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_name",
          "astId": 9314,
          "type": "t_string",
          "src": "224:20:43"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 9316,
          "type": "t_string",
          "src": "250:22:43"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 9318,
          "type": "t_uint8",
          "src": "278:23:43"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Detailed.sol",
          "label": "______gap",
          "astId": 9370,
          "type": "t_array:50<t_uint256>",
          "src": "1654:29:43"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "_minters",
          "astId": 7954,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:34"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
          "label": "______gap",
          "astId": 8054,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:34"
        },
        {
          "contract": "ERC20Mintable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Mintable.sol",
          "label": "______gap",
          "astId": 9419,
          "type": "t_array:50<t_uint256>",
          "src": "831:29:44"
        },
        {
          "contract": "ERC20Burnable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\token\\ERC20\\ERC20Burnable.sol",
          "label": "______gap",
          "astId": 9303,
          "type": "t_array:50<t_uint256>",
          "src": "761:29:42"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
          "label": "distributions",
          "astId": 6040,
          "type": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
          "src": "903:35:27"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
          "label": "nextDistributions",
          "astId": 6044,
          "type": "t_mapping<t_uint256>",
          "src": "992:52:27"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
          "label": "nextDistributionTimestamp",
          "astId": 6046,
          "type": "t_uint256",
          "src": "1107:40:27"
        },
        {
          "contract": "DistributionToken",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
          "label": "distributionAccumulator",
          "astId": 6048,
          "type": "t_uint256",
          "src": "1242:38:27"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "MinterRole",
            "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\MinterRole.sol",
            "label": "_minters",
            "astId": 7954,
            "type": "t_struct<Roles.Role>",
            "src": "327:27:34"
          },
          {
            "contract": "DistributionToken",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
            "label": "distributions",
            "astId": 6040,
            "type": "t_array:dyn<t_struct<DistributionToken.Distribution>>",
            "src": "903:35:27"
          }
        ],
        "storageDiff": [
          {
            "action": "rename",
            "updated": {
              "index": 20,
              "contract": "DistributionToken",
              "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
              "label": "nextDistributionTimestamp",
              "astId": 6046,
              "type": "t_uint256",
              "src": "1107:40:27"
            },
            "original": {
              "index": 20,
              "contract": "DistributionToken",
              "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\token\\pTokens\\DistributionToken.sol",
              "label": "nextDistributionTimestmap",
              "astId": 5928,
              "type": "t_uint256",
              "src": "1107:40:27"
            }
          }
        ]
      }
    },
    "LiquidityModule": {
      "address": "0xA725FC4D295daCCFEE727aC4d1449eC405ea019F",
      "constructorCode": "6080604052611b61806100136000396000f3fe",
      "bodyBytecodeHash": "6fef3c21180a54029c0641f114f7ecd24ed83aba087fad9470778ef6211fdb79",
      "localBytecodeHash": "62f6a806bc4a83edfc6536998651d676bf2862915b9516391795b7f7ac3bb43a",
      "deployedBytecodeHash": "62f6a806bc4a83edfc6536998651d676bf2862915b9516391795b7f7ac3bb43a",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<LiquidityModule.LiquidityLimits>": {
          "id": "t_struct<LiquidityModule.LiquidityLimits>",
          "kind": "struct",
          "label": "LiquidityModule.LiquidityLimits",
          "members": [
            {
              "label": "lDepositMin",
              "astId": 2629,
              "type": "t_uint256",
              "src": "442:19:19"
            },
            {
              "label": "pWithdrawMin",
              "astId": 2631,
              "type": "t_uint256",
              "src": "522:20:19"
            }
          ]
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 10486,
          "type": "t_bool",
          "src": "757:24:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 10488,
          "type": "t_bool",
          "src": "876:25:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 10550,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:46"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 9730,
          "type": "t_address",
          "src": "526:22:40"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 9843,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:40"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "LiquidityModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\liquidity\\LiquidityModule.sol",
          "label": "limits",
          "astId": 2634,
          "type": "t_struct<LiquidityModule.LiquidityLimits>",
          "src": "600:29:19"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "LiquidityModule",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\liquidity\\LiquidityModule.sol",
            "label": "limits",
            "astId": 2634,
            "type": "t_struct<LiquidityModule.LiquidityLimits>",
            "src": "600:29:19"
          }
        ],
        "storageDiff": []
      }
    },
    "Pool": {
      "address": "0x47E8b3DD558467882ED945BDbe8F0aBBe5C794f3",
      "constructorCode": "6080604052611cd3806100136000396000f3fe",
      "bodyBytecodeHash": "66f05f4f3eae8c67ef7c8f1a0a05322fef89e4ab3f8e5befee16d7c74c94bcc1",
      "localBytecodeHash": "31b7cb9c9c60262a8c583332f8c820acc44767e85aa122b1a420b70f3358b13d",
      "deployedBytecodeHash": "31b7cb9c9c60262a8c583332f8c820acc44767e85aa122b1a420b70f3358b13d",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_struct<AddressMap.Data>": {
          "id": "t_struct<AddressMap.Data>",
          "kind": "struct",
          "label": "AddressMap.Data",
          "members": [
            {
              "label": "valueOf",
              "astId": 7517,
              "type": "t_mapping<t_address>",
              "src": "278:35:30"
            },
            {
              "label": "keyOf",
              "astId": 7521,
              "type": "t_mapping<t_string>",
              "src": "323:33:30"
            },
            {
              "label": "items",
              "astId": 7523,
              "type": "t_struct<AddressList.Data>",
              "src": "366:33:30"
            }
          ]
        },
        "t_mapping<t_address>": {
          "id": "t_mapping<t_address>",
          "valueType": "t_address",
          "label": "mapping(key => address)",
          "kind": "mapping"
        },
        "t_mapping<t_string>": {
          "id": "t_mapping<t_string>",
          "valueType": "t_string",
          "label": "mapping(key => string)",
          "kind": "mapping"
        },
        "t_struct<AddressList.Data>": {
          "id": "t_struct<AddressList.Data>",
          "kind": "struct",
          "label": "AddressList.Data",
          "members": [
            {
              "label": "head",
              "astId": 6923,
              "type": "t_address",
              "src": "178:12:29"
            },
            {
              "label": "tail",
              "astId": 6925,
              "type": "t_address",
              "src": "200:12:29"
            },
            {
              "label": "length",
              "astId": 6927,
              "type": "t_uint256",
              "src": "222:14:29"
            },
            {
              "label": "isContain",
              "astId": 6931,
              "type": "t_mapping<t_bool>",
              "src": "246:37:29"
            },
            {
              "label": "nextOf",
              "astId": 6935,
              "type": "t_mapping<t_address>",
              "src": "293:34:29"
            },
            {
              "label": "prevOf",
              "astId": 6939,
              "type": "t_mapping<t_address>",
              "src": "337:34:29"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 9493,
          "type": "t_bool",
          "src": "757:24:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 9495,
          "type": "t_bool",
          "src": "876:25:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 9557,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:46"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 8737,
          "type": "t_address",
          "src": "526:22:40"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 8850,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:40"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "name",
          "astId": 169,
          "type": "t_string",
          "src": "209:19:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "description",
          "astId": 171,
          "type": "t_string",
          "src": "234:26:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "founder",
          "astId": 173,
          "type": "t_address",
          "src": "266:22:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "modules",
          "astId": 175,
          "type": "t_struct<AddressMap.Data>",
          "src": "317:23:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "is_constant",
          "astId": 185,
          "type": "t_mapping<t_bool>",
          "src": "468:43:3"
        },
        {
          "contract": "Pool",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
          "label": "abiOf",
          "astId": 189,
          "type": "t_mapping<t_string>",
          "src": "622:39:3"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "Pool",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\core\\Pool.sol",
            "label": "modules",
            "astId": 175,
            "type": "t_struct<AddressMap.Data>",
            "src": "317:23:3"
          }
        ],
        "storageDiff": []
      }
    },
    "LoanModule": {
      "address": "0xa3f7CFEC0cd94DDCa6a0D3352d7A1111D3FF249b",
      "constructorCode": "6080604052615f8c806100136000396000f3fe",
      "bodyBytecodeHash": "50c805a6186d25ca0282ee8de61642e350c78799a083774fd157c32aba380fcd",
      "localBytecodeHash": "e1339c3598f772bade92b53d7ec026933c9c81b08f7dcfc40ccad24dc68b4e27",
      "deployedBytecodeHash": "e1339c3598f772bade92b53d7ec026933c9c81b08f7dcfc40ccad24dc68b4e27",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<LoanModule.DebtProposal>": {
          "id": "t_struct<LoanModule.DebtProposal>",
          "kind": "struct",
          "label": "LoanModule.DebtProposal",
          "members": [
            {
              "label": "lAmount",
              "astId": 3047,
              "type": "t_uint256",
              "src": "1818:15:20"
            },
            {
              "label": "interest",
              "astId": 3049,
              "type": "t_uint256",
              "src": "1901:16:20"
            },
            {
              "label": "descriptionHash",
              "astId": 3051,
              "type": "t_bytes32",
              "src": "1995:23:20"
            },
            {
              "label": "pledges",
              "astId": 3055,
              "type": "t_mapping<t_struct<LoanModule.DebtPledge>>",
              "src": "2096:38:20"
            },
            {
              "label": "supporters",
              "astId": 3058,
              "type": "t_array:dyn<t_address>",
              "src": "2218:20:20"
            },
            {
              "label": "lCovered",
              "astId": 3060,
              "type": "t_uint256",
              "src": "2335:16:20"
            },
            {
              "label": "pCollected",
              "astId": 3062,
              "type": "t_uint256",
              "src": "2417:18:20"
            },
            {
              "label": "executed",
              "astId": 3064,
              "type": "t_bool",
              "src": "2502:13:20"
            }
          ]
        },
        "t_bytes32": {
          "id": "t_bytes32",
          "kind": "elementary",
          "label": "bytes32"
        },
        "t_struct<LoanModule.DebtPledge>": {
          "id": "t_struct<LoanModule.DebtPledge>",
          "kind": "struct",
          "label": "LoanModule.DebtPledge",
          "members": [
            {
              "label": "senderIndex",
              "astId": 3040,
              "type": "t_uint256",
              "src": "1564:19:20"
            },
            {
              "label": "lAmount",
              "astId": 3042,
              "type": "t_uint256",
              "src": "1632:15:20"
            },
            {
              "label": "pAmount",
              "astId": 3044,
              "type": "t_uint256",
              "src": "1712:15:20"
            }
          ]
        },
        "t_mapping<t_struct<LoanModule.DebtPledge>>": {
          "id": "t_mapping<t_struct<LoanModule.DebtPledge>>",
          "valueType": "t_struct<LoanModule.DebtPledge>",
          "label": "mapping(key => LoanModule.DebtPledge)",
          "kind": "mapping"
        },
        "t_array:dyn<t_address>": {
          "id": "t_array:dyn<t_address>",
          "valueType": "t_address",
          "length": "dyn",
          "kind": "array",
          "label": "address[]"
        },
        "t_array:dyn<t_struct<LoanModule.DebtProposal>>": {
          "id": "t_array:dyn<t_struct<LoanModule.DebtProposal>>",
          "valueType": "t_struct<LoanModule.DebtProposal>",
          "length": "dyn",
          "kind": "array",
          "label": "LoanModule.DebtProposal[]"
        },
        "t_mapping<t_array:dyn<t_struct<LoanModule.DebtProposal>>>": {
          "id": "t_mapping<t_array:dyn<t_struct<LoanModule.DebtProposal>>>",
          "valueType": "t_array:dyn<t_struct<LoanModule.DebtProposal>>",
          "label": "mapping(key => LoanModule.DebtProposal[])",
          "kind": "mapping"
        },
        "t_struct<LoanModule.Debt>": {
          "id": "t_struct<LoanModule.Debt>",
          "kind": "struct",
          "label": "LoanModule.Debt",
          "members": [
            {
              "label": "proposal",
              "astId": 3067,
              "type": "t_uint256",
              "src": "2602:16:20"
            },
            {
              "label": "lAmount",
              "astId": 3069,
              "type": "t_uint256",
              "src": "2689:15:20"
            },
            {
              "label": "lastPayment",
              "astId": 3071,
              "type": "t_uint256",
              "src": "2796:19:20"
            },
            {
              "label": "pInterest",
              "astId": 3073,
              "type": "t_uint256",
              "src": "2953:17:20"
            },
            {
              "label": "claimedPledges",
              "astId": 3077,
              "type": "t_mapping<t_uint256>",
              "src": "3043:42:20"
            },
            {
              "label": "defaultExecuted",
              "astId": 3079,
              "type": "t_bool",
              "src": "3145:20:20"
            }
          ]
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_array:dyn<t_struct<LoanModule.Debt>>": {
          "id": "t_array:dyn<t_struct<LoanModule.Debt>>",
          "valueType": "t_struct<LoanModule.Debt>",
          "length": "dyn",
          "kind": "array",
          "label": "LoanModule.Debt[]"
        },
        "t_mapping<t_array:dyn<t_struct<LoanModule.Debt>>>": {
          "id": "t_mapping<t_array:dyn<t_struct<LoanModule.Debt>>>",
          "valueType": "t_array:dyn<t_struct<LoanModule.Debt>>",
          "label": "mapping(key => LoanModule.Debt[])",
          "kind": "mapping"
        },
        "t_struct<LoanModule.LoanLimits>": {
          "id": "t_struct<LoanModule.LoanLimits>",
          "kind": "struct",
          "label": "LoanModule.LoanLimits",
          "members": [
            {
              "label": "lDebtAmountMin",
              "astId": 3082,
              "type": "t_uint256",
              "src": "3275:22:20"
            },
            {
              "label": "debtInterestMin",
              "astId": 3084,
              "type": "t_uint256",
              "src": "3371:23:20"
            },
            {
              "label": "pledgePercentMin",
              "astId": 3086,
              "type": "t_uint256",
              "src": "3441:24:20"
            },
            {
              "label": "lMinPledgeMax",
              "astId": 3088,
              "type": "t_uint256",
              "src": "3598:21:20"
            },
            {
              "label": "debtLoadMax",
              "astId": 3090,
              "type": "t_uint256",
              "src": "3726:19:20"
            }
          ]
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 10486,
          "type": "t_bool",
          "src": "757:24:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 10488,
          "type": "t_bool",
          "src": "876:25:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 10550,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:46"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 9730,
          "type": "t_address",
          "src": "526:22:40"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 9843,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:40"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "LoanModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
          "label": "debtProposals",
          "astId": 3096,
          "type": "t_mapping<t_array:dyn<t_struct<LoanModule.DebtProposal>>>",
          "src": "3890:53:20"
        },
        {
          "contract": "LoanModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
          "label": "debts",
          "astId": 3101,
          "type": "t_mapping<t_array:dyn<t_struct<LoanModule.Debt>>>",
          "src": "3949:37:20"
        },
        {
          "contract": "LoanModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
          "label": "lDebts",
          "astId": 3103,
          "type": "t_uint256",
          "src": "4010:22:20"
        },
        {
          "contract": "LoanModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
          "label": "lProposals",
          "astId": 3105,
          "type": "t_uint256",
          "src": "4038:26:20"
        },
        {
          "contract": "LoanModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
          "label": "limits",
          "astId": 3107,
          "type": "t_struct<LoanModule.LoanLimits>",
          "src": "4070:24:20"
        },
        {
          "contract": "LoanModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
          "label": "activeDebts",
          "astId": 3111,
          "type": "t_mapping<t_uint256>",
          "src": "4101:44:20"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "LoanModule",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
            "label": "debtProposals",
            "astId": 3096,
            "type": "t_mapping<t_array:dyn<t_struct<LoanModule.DebtProposal>>>",
            "src": "3890:53:20"
          },
          {
            "contract": "LoanModule",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
            "label": "debts",
            "astId": 3101,
            "type": "t_mapping<t_array:dyn<t_struct<LoanModule.Debt>>>",
            "src": "3949:37:20"
          },
          {
            "contract": "LoanModule",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
            "label": "limits",
            "astId": 3107,
            "type": "t_struct<LoanModule.LoanLimits>",
            "src": "4070:24:20"
          }
        ],
        "storageDiff": [
          {
            "action": "append",
            "updated": {
              "index": 11,
              "contract": "LoanModule",
              "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\loan\\LoanModule.sol",
              "label": "activeDebts",
              "astId": 3111,
              "type": "t_mapping<t_uint256>",
              "src": "4101:44:20"
            }
          }
        ]
      }
    },
    "FundsModule": {
      "address": "0x6d82dA090DAff93a05b239370DAFA56F966AfbDB",
      "constructorCode": "6080604052613049806100136000396000f3fe",
      "bodyBytecodeHash": "e519643807790c1e429719e450cba316ca59441ad62a917b41242bb5931c5752",
      "localBytecodeHash": "5726d42e4afd85554d81a604ca0a480043722501c5deb3c88cdae7ee52e5fc70",
      "deployedBytecodeHash": "5726d42e4afd85554d81a604ca0a480043722501c5deb3c88cdae7ee52e5fc70",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 8850,
              "type": "t_mapping<t_bool>",
              "src": "150:32:33"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 10486,
          "type": "t_bool",
          "src": "757:24:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 10488,
          "type": "t_bool",
          "src": "876:25:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 10550,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:46"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 9730,
          "type": "t_address",
          "src": "526:22:40"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 9843,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:40"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "FundsOperatorRole",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\funds\\FundsOperatorRole.sol",
          "label": "_operators",
          "astId": 2518,
          "type": "t_struct<Roles.Role>",
          "src": "448:29:18"
        },
        {
          "contract": "FundsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\funds\\FundsModule.sol",
          "label": "lBalance",
          "astId": 1723,
          "type": "t_uint256",
          "src": "712:23:17"
        },
        {
          "contract": "FundsModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\funds\\FundsModule.sol",
          "label": "pBalances",
          "astId": 1727,
          "type": "t_mapping<t_uint256>",
          "src": "835:35:17"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "FundsOperatorRole",
            "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\funds\\FundsOperatorRole.sol",
            "label": "_operators",
            "astId": 2518,
            "type": "t_struct<Roles.Role>",
            "src": "448:29:18"
          }
        ],
        "storageDiff": []
      }
    },
    "AccessModule": {
      "address": "0x886b94e740958652478883a9c4b9cf168af808E2",
      "constructorCode": "6080604052611a7c806100136000396000f3fe",
      "bodyBytecodeHash": "63bb37709eca62768a5ddcdbc94574c74daadcfb2243126b5e865b885dfca2da",
      "localBytecodeHash": "e17b014cf8e753ad94903123d1f83da11a21b3bc352ca839249dc6543dc46b81",
      "deployedBytecodeHash": "e17b014cf8e753ad94903123d1f83da11a21b3bc352ca839249dc6543dc46b81",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 8850,
              "type": "t_mapping<t_bool>",
              "src": "150:32:33"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initialized",
          "astId": 10486,
          "type": "t_bool",
          "src": "757:24:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "initializing",
          "astId": 10488,
          "type": "t_bool",
          "src": "876:25:46"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin\\upgrades\\contracts\\Initializable.sol",
          "label": "______gap",
          "astId": 10550,
          "type": "t_array:50<t_uint256>",
          "src": "1982:29:46"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "_owner",
          "astId": 9730,
          "type": "t_address",
          "src": "526:22:40"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\ownership\\Ownable.sol",
          "label": "______gap",
          "astId": 9843,
          "type": "t_array:50<t_uint256>",
          "src": "2471:29:40"
        },
        {
          "contract": "Module",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\common\\Module.sol",
          "label": "pool",
          "astId": 43,
          "type": "t_address",
          "src": "214:19:1"
        },
        {
          "contract": "PauserRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\PauserRole.sol",
          "label": "_pausers",
          "astId": 9070,
          "type": "t_struct<Roles.Role>",
          "src": "327:27:35"
        },
        {
          "contract": "PauserRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\PauserRole.sol",
          "label": "______gap",
          "astId": 9170,
          "type": "t_array:50<t_uint256>",
          "src": "1193:29:35"
        },
        {
          "contract": "Pausable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\lifecycle\\Pausable.sol",
          "label": "_paused",
          "astId": 9449,
          "type": "t_bool",
          "src": "909:20:38"
        },
        {
          "contract": "Pausable",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\lifecycle\\Pausable.sol",
          "label": "______gap",
          "astId": 9532,
          "type": "t_array:50<t_uint256>",
          "src": "2163:29:38"
        },
        {
          "contract": "WhitelistAdminRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistAdminRole.sol",
          "label": "_whitelistAdmins",
          "astId": 9193,
          "type": "t_struct<Roles.Role>",
          "src": "477:35:36"
        },
        {
          "contract": "WhitelistAdminRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistAdminRole.sol",
          "label": "______gap",
          "astId": 9293,
          "type": "t_array:50<t_uint256>",
          "src": "1503:29:36"
        },
        {
          "contract": "WhitelistedRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistedRole.sol",
          "label": "_whitelisteds",
          "astId": 9319,
          "type": "t_struct<Roles.Role>",
          "src": "709:32:37"
        },
        {
          "contract": "WhitelistedRole",
          "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistedRole.sol",
          "label": "______gap",
          "astId": 9427,
          "type": "t_array:50<t_uint256>",
          "src": "1760:29:37"
        },
        {
          "contract": "AccessModule",
          "path": "..\\..\\..\\D\\projects\\akropolis\\akropolisOS\\contracts\\modules\\access\\AccessModule.sol",
          "label": "whitelistEnabled",
          "astId": 1131,
          "type": "t_bool",
          "src": "433:28:12"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "PauserRole",
            "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\PauserRole.sol",
            "label": "_pausers",
            "astId": 9070,
            "type": "t_struct<Roles.Role>",
            "src": "327:27:35"
          },
          {
            "contract": "WhitelistAdminRole",
            "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistAdminRole.sol",
            "label": "_whitelistAdmins",
            "astId": 9193,
            "type": "t_struct<Roles.Role>",
            "src": "477:35:36"
          },
          {
            "contract": "WhitelistedRole",
            "path": "@openzeppelin\\contracts-ethereum-package\\contracts\\access\\roles\\WhitelistedRole.sol",
            "label": "_whitelisteds",
            "astId": 9319,
            "type": "t_struct<Roles.Role>",
            "src": "709:32:37"
          }
        ],
        "storageDiff": []
      }
    }
  },
  "solidityLibs": {},
  "proxies": {
    "akropolis-pool/FreeDAI": [
      {
        "address": "0x3F5B698332572Fb6188492F5D53ba75f81797F9d",
        "version": "1.0.0",
        "implementation": "0x5890682b38Eabc178aB2C375d0Fd77546f68de7E",
        "admin": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/Pool": [
      {
        "address": "0x17d7aFC6604C3933913960110Cfa5c436eb0dB45",
        "version": "1.0.0",
        "implementation": "0x47E8b3DD558467882ED945BDbe8F0aBBe5C794f3",
        "admin": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/PToken": [
      {
        "address": "0x2dC45475c35AB01eC7eEA16a843246e8c67D6C82",
        "version": "1.0.0",
        "implementation": "0x65ac9039469099D71Cf11f075bFc0BaE5A5BeB51",
        "admin": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/CurveModule": [
      {
        "address": "0xD5F67aa0af6be5c10389A8AC5d2392ee60e8D1Cb",
        "version": "1.0.0",
        "implementation": "0x8627524C562b2620086DfD9b0C9D11B1af9Ae7A5",
        "admin": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/LiquidityModule": [
      {
        "address": "0xfC95422e89e1892D939B103e73e80d60030b02A5",
        "version": "1.0.0",
        "implementation": "0xA725FC4D295daCCFEE727aC4d1449eC405ea019F",
        "admin": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/LoanModule": [
      {
        "address": "0xCA7c5AcF5686d4fdF1a439FE356d66638371Db64",
        "version": "1.0.0",
        "implementation": "0xa3f7CFEC0cd94DDCa6a0D3352d7A1111D3FF249b",
        "admin": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/FundsModule": [
      {
        "address": "0x3b1E2e62A4332BAb55A3e935EeaC95aF71002E7B",
        "version": "1.0.0",
        "implementation": "0x6d82dA090DAff93a05b239370DAFA56F966AfbDB",
        "admin": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8",
        "kind": "Upgradeable"
      }
    ],
    "akropolis-pool/AccessModule": [
      {
        "address": "0x3346a57563Ce5d04Ab45efcA62DDe6544D056064",
        "version": "1.0.0",
        "implementation": "0x886b94e740958652478883a9c4b9cf168af808E2",
        "admin": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8",
        "kind": "Upgradeable"
      }
    ]
  },
  "manifestVersion": "2.2",
  "version": "1.0.0",
  "proxyAdmin": {
    "address": "0x3e2c630e5ffE717D939C755E78265fF502CB6FA8"
  }
}
